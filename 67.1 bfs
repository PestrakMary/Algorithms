import java.io.*;
import java.util.*;


public class Main implements Runnable {

    int[] key;
    boolean[] visit;
    int numb = 0;

    static PrintWriter printWriter;


    @Override
    public void run() {
        try {
            int n;
            int[][] graph;
            FastScanner scanner = new FastScanner("input.txt");
            n = scanner.nextInt();
            graph = new int[n][n];
            key = new int[n];
            visit = new boolean[n];
            for (int i = 0; i < n; i++) {
                for (int j = 0; j < n; j++) {
                    graph[i][j] = scanner.nextInt();
                }
            }
            LinkedList<Integer> queue = new LinkedList<>();
            for(int s =0; s<n; s++) {
                if(visit[s] == false) {
                    numb++;
                    key[s] = numb;
                    visit[s] = true;
                    queue.add(s);
                    while (!queue.isEmpty()) {
                        int v = queue.poll();
                        for (int i = 0; i < n; i++) {
                            if (graph[v][i] == 1) {
                                if (visit[i] == false) {
                                    numb++;
                                    key[i] = numb;
                                    visit[i] = true;
                                    queue.add(i);
                                }
                            }
                        }
                    }
                }
            }
            printWriter = new PrintWriter("output.txt");
            for (int i = 0; i < n; i++)
                printWriter.print(key[i] + " ");
            printWriter.flush();
        } catch (IOException ex) {

        }

    }

    public static void main(String[] args) {
        new Thread(null, new Main(), "", 64 * 1024 * 1024).start();

    }

    class FastScanner {
        BufferedReader reader;
        StringTokenizer tokenizer;

        public FastScanner(String fileName) throws IOException {
            reader = new BufferedReader(new FileReader(fileName));
        }

        public String next() throws IOException {
            while (tokenizer == null || !tokenizer.hasMoreTokens()) {
                String line = reader.readLine();
                if (line == null) {
                    throw new EOFException();
                }
                tokenizer = new StringTokenizer(line);
            }
            return tokenizer.nextToken();
        }

        public int nextInt() throws IOException {
            return Integer.parseInt(next());
        }
    }
}
